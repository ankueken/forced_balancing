source('Calc/Functions/deficiency')
library(R.matlab)
library(igraph)
Data=readMat('Calc/Data/Ecoli/Maranas_Ecoli_kinetic_model/genome_scale/Supplementary Software 1/k-ecoli457/k-ecoli457/Data.mat')
Data=Data$network.data
S=Data[,,5]
S=Data
S
S=Data[,,1][5]
S=Data[,,1][5,1]
S
S=Data[,,1][5]
S$S.f.b
S=S$S.f.b
rev=rep(0,5239)
D=deficiency(S,rev)
writeMat('Calc/Data/Ecoli/Maranas_Ecoli_kinetic_model/genome_scale/Supplementary Software 1/k-ecoli457/k-ecoli457/A_Y_matrix_k-ecoli457.mat',Y=D$Y,A=D$A,CNames=colnames(Y),N=S,Data=Data)
writeMat('Calc/Data/Ecoli/Maranas_Ecoli_kinetic_model/genome_scale/Supplementary Software 1/k-ecoli457/k-ecoli457/A_Y_matrix_k-ecoli457.mat',D$Y=Y,D$A=A,colnames(Y)=CNames,S=N,Data=Data)
Y=D$Y
A=D$A
writeMat('Calc/Data/Ecoli/Maranas_Ecoli_kinetic_model/genome_scale/Supplementary Software 1/k-ecoli457/k-ecoli457/A_Y_matrix_k-ecoli457.mat',Y=Y,A=A,colnames(Y)=CNames,S=N,Data=Data)
writeMat('Calc/Data/Ecoli/Maranas_Ecoli_kinetic_model/genome_scale/Supplementary Software 1/k-ecoli457/k-ecoli457/A_Y_matrix_k-ecoli457.mat',Y=Y,A=A)
writeMat('Calc/Data/Ecoli/Maranas_Ecoli_kinetic_model/genome_scale/Supplementary Software 1/k-ecoli457/k-ecoli457/A_Y_matrix_k-ecoli457.mat',Y=Y,A=A,complexes=colnames((Y)))
args='hallo'
class(args)
args[1:2]
args[[1]]
length(args)
nchar(args)
substring(args,1,nchar(args)-3)
args='h.mat'
substring(args,1,nchar(args)-3)
substring(args,1,nchar(args)-4)
setwd('~')
setwd('GitHub/concordant_complexes/concordant_complexes/Results_concordant_original_irreversibility_considered/')
# load packages
library(igraph)
library(R.matlab)
library(Matrix)
source('network_reduction_by_balanced_complexes/functions/deficiency')
source('../functions/deficiency')
files_irrev = Sys.glob('*.mat')
d_original = rep(-1,length(files_irrev))
for(i in 1:length(files_irrev)){
print(i)
# load results
Results_irrev = readMat(files_irrev[i])
model_original = Results_irrev$MODEL.r[[1]]
###############################################################
# calculate deficiency - irrev
###############################################################
rev = model_original[[1]][,,1]$lb<0
S = model_original[[1]][,,1]$S
D_original = deficiency(S,rev)
A=D_original$A
Y=D_original$Y
# number of complexes
complexes=dim(A)[1]
linkage_classes=count_components(D_original$g,mode="weak")
s=rankMatrix(S)
d_original[i] = complexes-linkage_classes-s[1]
}
Results_irrev$Results.balanced
Results_irrev$Results.balanced[,,1]
model_original = Results_irrev$Results.balanced[,,1]
model_original[[1]]
model_original[[1]][,,1]
Results_irrev$Results.balanced
Results_irrev$Results.balanced[,,1][[1]]
model_original[[1]][[1]]
model_original[[1]][[1]][[1]][,,1]
model_original[[1]][[1]][[1]][,,1]$lb
rev = model_original[[1]][[1]][[1]][,,1]$lb<0
S = model_original[[1]][[1]][[1]][,,1]$S
D_original = deficiency(S,rev)
A=D_original$A
Y=D_original$Y
# number of complexes
complexes=dim(A)[1]
linkage_classes=count_components(D_original$g,mode="weak")
s=rankMatrix(S)
d_original[i] = complexes-linkage_classes-s[1]
for(i in 1:length(files_irrev)){
print(i)
# load results
Results_irrev = readMat(files_irrev[i])
model_original = Results_irrev$Results.balanced[,,1]
###############################################################
# calculate deficiency - irrev
###############################################################
rev = model_original[[1]][[1]][[1]][,,1]$lb<0
S = model_original[[1]][[1]][[1]][,,1]$S
D_original = deficiency(S,rev)
A=D_original$A
Y=D_original$Y
# number of complexes
complexes=dim(A)[1]
linkage_classes=count_components(D_original$g,mode="weak")
s=rankMatrix(S)
d_original[i] = complexes-linkage_classes-s[1]
}
d_original
